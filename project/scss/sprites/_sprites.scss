// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$github-2x-name: 'github-2x';
$github-2x-x: 96px;
$github-2x-y: 134px;
$github-2x-offset-x: -96px;
$github-2x-offset-y: -134px;
$github-2x-width: 64px;
$github-2x-height: 64px;
$github-2x-total-width: 294px;
$github-2x-total-height: 224px;
$github-2x-image: '../images/sprite-out/spritesheet.png';
$github-2x: (96px, 134px, -96px, -134px, 64px, 64px, 294px, 224px, '../images/sprite-out/spritesheet.png', 'github-2x', );
$github-name: 'github';
$github-x: 230px;
$github-y: 140px;
$github-offset-x: -230px;
$github-offset-y: -140px;
$github-width: 32px;
$github-height: 32px;
$github-total-width: 294px;
$github-total-height: 224px;
$github-image: '../images/sprite-out/spritesheet.png';
$github: (230px, 140px, -230px, -140px, 32px, 32px, 294px, 224px, '../images/sprite-out/spritesheet.png', 'github', );
$matreshka-2x-name: 'matreshka-2x';
$matreshka-2x-x: 0px;
$matreshka-2x-y: 0px;
$matreshka-2x-offset-x: 0px;
$matreshka-2x-offset-y: 0px;
$matreshka-2x-width: 128px;
$matreshka-2x-height: 128px;
$matreshka-2x-total-width: 294px;
$matreshka-2x-total-height: 224px;
$matreshka-2x-image: '../images/sprite-out/spritesheet.png';
$matreshka-2x: (0px, 0px, 0px, 0px, 128px, 128px, 294px, 224px, '../images/sprite-out/spritesheet.png', 'matreshka-2x', );
$matreshka-name: 'matreshka';
$matreshka-x: 230px;
$matreshka-y: 0px;
$matreshka-offset-x: -230px;
$matreshka-offset-y: 0px;
$matreshka-width: 64px;
$matreshka-height: 64px;
$matreshka-total-width: 294px;
$matreshka-total-height: 224px;
$matreshka-image: '../images/sprite-out/spritesheet.png';
$matreshka: (230px, 0px, -230px, 0px, 64px, 64px, 294px, 224px, '../images/sprite-out/spritesheet.png', 'matreshka', );
$twitter-2x-name: 'twitter-2x';
$twitter-2x-x: 230px;
$twitter-2x-y: 70px;
$twitter-2x-offset-x: -230px;
$twitter-2x-offset-y: -70px;
$twitter-2x-width: 64px;
$twitter-2x-height: 64px;
$twitter-2x-total-width: 294px;
$twitter-2x-total-height: 224px;
$twitter-2x-image: '../images/sprite-out/spritesheet.png';
$twitter-2x: (230px, 70px, -230px, -70px, 64px, 64px, 294px, 224px, '../images/sprite-out/spritesheet.png', 'twitter-2x', );
$twitter-name: 'twitter';
$twitter-x: 230px;
$twitter-y: 178px;
$twitter-offset-x: -230px;
$twitter-offset-y: -178px;
$twitter-width: 32px;
$twitter-height: 32px;
$twitter-total-width: 294px;
$twitter-total-height: 224px;
$twitter-image: '../images/sprite-out/spritesheet.png';
$twitter: (230px, 178px, -230px, -178px, 32px, 32px, 294px, 224px, '../images/sprite-out/spritesheet.png', 'twitter', );
$unname1-name: 'unname1';
$unname1-x: 134px;
$unname1-y: 0px;
$unname1-offset-x: -134px;
$unname1-offset-y: 0px;
$unname1-width: 90px;
$unname1-height: 90px;
$unname1-total-width: 294px;
$unname1-total-height: 224px;
$unname1-image: '../images/sprite-out/spritesheet.png';
$unname1: (134px, 0px, -134px, 0px, 90px, 90px, 294px, 224px, '../images/sprite-out/spritesheet.png', 'unname1', );
$unname2-name: 'unname2';
$unname2-x: 0px;
$unname2-y: 134px;
$unname2-offset-x: 0px;
$unname2-offset-y: -134px;
$unname2-width: 90px;
$unname2-height: 90px;
$unname2-total-width: 294px;
$unname2-total-height: 224px;
$unname2-image: '../images/sprite-out/spritesheet.png';
$unname2: (0px, 134px, 0px, -134px, 90px, 90px, 294px, 224px, '../images/sprite-out/spritesheet.png', 'unname2', );
$spritesheet-width: 294px;
$spritesheet-height: 224px;
$spritesheet-image: '../images/sprite-out/spritesheet.png';
$spritesheet-sprites: ($github-2x, $github, $matreshka-2x, $matreshka, $twitter-2x, $twitter, $unname1, $unname2, );
$spritesheet: (294px, 224px, '../images/sprite-out/spritesheet.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
